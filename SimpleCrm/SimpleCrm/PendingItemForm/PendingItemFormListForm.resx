<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colEdit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="colEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="colFutureInsurancePolicyNo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pendingItemDtoBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="colTodayEdit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="colTodayEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="colTodayCustomerName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colTodayInsurancePolicyNo.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>