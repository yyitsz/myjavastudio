<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:batch="http://www.springframework.org/schema/batch"
        xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
          http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
">
    
   
    
    <bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}"></property>
        <property name="linesToSkip" value="1"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="PRODUCT_ID,NAME,DESCRIPTION,PRICE" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.yy.studybatch.ch01.batch.ProductFieldSetMapper"></bean>
                </property>
            </bean>
        </property>
    </bean>
    
    <bean id="writer" class="org.yy.studybatch.ch01.batch.ProductJdbcItemWriter">
        <constructor-arg ref="dataSource"></constructor-arg>
    </bean>
    <bean id="decompress" class="org.yy.studybatch.ch01.batch.DecompressTasklet" scope="step">
        <property name="inputResource" value="#{jobParameters['inputResource']}" />
        <property name="targetDirectory" value="#{jobParameters['targetDirectory']}" />
        <property name="targetFile" value="#{jobParameters['targetFile']}" />
    </bean>
    <batch:job id="importProducts">
        <batch:step id="decompressProducts" next="readWriteProducts" >
            <batch:tasklet ref="decompress"/>
        </batch:step>
        <batch:step id="readWriteProducts">
            <batch:tasklet>
                <batch:chunk reader="reader" writer="writer" commit-interval="500" />
            </batch:tasklet>
        </batch:step>
    </batch:job>
</beans>
